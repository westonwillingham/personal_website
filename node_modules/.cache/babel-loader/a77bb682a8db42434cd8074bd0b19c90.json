{"ast":null,"code":"var _jsxFileName = \"/Users/westonwillingham/Desktop/Portfolio-2020/src/components/email_form/index.js\";\nimport React from 'react';\nimport '../email_form/style.css';\nimport * as emailjs from 'emailjs-com';\nimport { Button, Form, FormGroup, Modal, Image } from 'react-bootstrap';\nimport ClipLoader from 'react-spinners/BarLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Email_Form extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      name: '',\n      email: '',\n      subject: '',\n      message: '',\n      show: false\n    };\n\n    this.handleChange = (param, e) => {\n      this.setState({\n        [param]: e.target.value\n      });\n    };\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false,\n      loading: false\n    };\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n    this.setState({\n      name: ''\n    });\n    this.resetForm();\n  }\n\n  handleShow() {\n    this.setState({\n      show: true,\n      loading: false\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      loading: true\n    });\n    const {\n      email,\n      subject,\n      message\n    } = this.state;\n    let templateParams = {\n      from_name: email,\n      to_name: 'motasimfoad@gmail.com',\n      subject: subject,\n      message_html: message\n    }; //=======================\n    // Use your own API key\n    //=======================\n\n    emailjs.send('gmail', 'template_OErNDyFu', templateParams, 'user_64rGh5RuHtigw7paS8NsX').then(result => {\n      this.handleShow();\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      email: '',\n      subject: '',\n      message: '',\n      modal: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.handleSubmit.bind(this),\n      className: \"Contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contact-form-header\",\n        children: \"Contact Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        className: \"contact_input\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: this.state.email,\n          className: \"contact_input_text\",\n          onChange: this.handleChange.bind(this, 'email'),\n          placeholder: \"Email Address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        controlId: \"formBasicName\",\n        className: \"contact_input\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: \"1\",\n          value: this.state.name,\n          onChange: this.handleChange.bind(this, 'name'),\n          placeholder: \"Your Name\",\n          className: \"contact_input_text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        controlId: \"formBasicSubject\",\n        className: \"contact_input\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: \"1\",\n          value: this.state.subject,\n          onChange: this.handleChange.bind(this, 'subject'),\n          placeholder: \"Subject\",\n          className: \"contact_input_text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        controlId: \"formBasicMessage\",\n        className: \"contact_input\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: \"6\",\n          value: this.state.message,\n          placeholder: \"Your text\",\n          onChange: this.handleChange.bind(this, 'message'),\n          className: \"contact_input_text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"contact-email-text-btn\",\n        variant: \"outline-light\",\n        size: \"lg\",\n        type: \"submit\",\n        children: [\"Submit\", /*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 5 // or 150px\n          ,\n          color: \"#ffffff\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        size: \"md\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        show: this.state.show,\n        onHide: this.handleClose,\n        centered: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"contact_success_modal_body\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            className: \"contact_success_modal_img\",\n            src: \"https://icon-library.net/images/success-icon/success-icon-5.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Thank you \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: this.state.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this), \"!!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 31\n            }, this), \" \\uD83D\\uDE07\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Your message was successfully recorded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-light\",\n            size: \"lg\",\n            onClick: this.handleClose,\n            className: \"contact-email-text-btn\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Email_Form;","map":{"version":3,"sources":["/Users/westonwillingham/Desktop/Portfolio-2020/src/components/email_form/index.js"],"names":["React","emailjs","Button","Form","FormGroup","Modal","Image","ClipLoader","Email_Form","Component","constructor","props","context","state","name","email","subject","message","show","handleChange","param","e","setState","target","value","handleShow","bind","handleClose","loading","resetForm","handleSubmit","preventDefault","templateParams","from_name","to_name","message_html","send","then","result","console","log","text","error","modal","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../email_form/style.css';\nimport * as emailjs from 'emailjs-com';\nimport { Button, Form, FormGroup, Modal, Image } from 'react-bootstrap';\nimport ClipLoader from 'react-spinners/BarLoader';\n\nclass Email_Form extends React.Component {\n\n  constructor(props, context) {\n\t\tsuper(props, context);\n    this.handleShow = this.handleShow.bind(this);\n\t\tthis.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false,\n      loading: false,\n\t\t};\n\t}\n\n\thandleClose() {\n    this.setState({ show: false });\n    this.setState({ name: '' });\n    this.resetForm();\n\t}\n\n\thandleShow() {\n\t\tthis.setState({ show: true, loading: false });\n\t}\n\n  state = {\n    name: '',\n    email: '',\n    subject: '',\n    message: '',\n    show: false,\n  }\n  \n  handleSubmit(e) {\n    e.preventDefault(); \n    this.setState({ loading: true });   \n    \n    const {email, subject, message } = this.state    \n    \n    let templateParams = {\n      from_name: email,\n      to_name: 'motasimfoad@gmail.com',\n      subject: subject,\n      message_html: message,\n     }\n     \n     //=======================\n     // Use your own API key\n     //=======================\n\n     emailjs.send(\n      'gmail',\n      'template_OErNDyFu',\n       templateParams,\n      'user_64rGh5RuHtigw7paS8NsX'\n     )\n     .then((result) => {\n        this.handleShow();\n        console.log(result.text);\n      }, (error) => {\n        console.log(error.text);\n      });     \n    }\n    \n    resetForm() {\n    this.setState({\n      email: '',\n      subject: '',\n      message: '',\n      modal: false,\n    })\n  }\n  \n  handleChange = (param, e) => {\n    this.setState({ [param]: e.target.value })\n  }\n  \n  render() {\n    return (\n  \n          <Form onSubmit={this.handleSubmit.bind(this)} className=\"Contact-form\">\n            <p className=\"contact-form-header\">Contact Form</p>\n             <FormGroup className=\"contact_input\">\n              <Form.Control type=\"email\" value={this.state.email} className=\"contact_input_text\" onChange={this.handleChange.bind(this, 'email')} placeholder=\"Email Address\" required/>\n             </FormGroup>\n            <FormGroup controlId=\"formBasicName\" className=\"contact_input\">\n              <Form.Control as=\"textarea\" rows=\"1\" value={this.state.name} onChange={this.handleChange.bind(this, 'name')} placeholder=\"Your Name\" className=\"contact_input_text\" required />\n            </FormGroup>\n            <FormGroup controlId=\"formBasicSubject\" className=\"contact_input\">\n             <Form.Control as=\"textarea\" rows=\"1\"  value={this.state.subject} onChange={this.handleChange.bind(this, 'subject')} placeholder=\"Subject\" className=\"contact_input_text\" required />\n            </FormGroup>\n            <FormGroup controlId=\"formBasicMessage\" className=\"contact_input\">\n              <Form.Control as=\"textarea\" rows=\"6\" value={this.state.message} placeholder=\"Your text\" onChange={this.handleChange.bind(this, 'message')} className=\"contact_input_text\" required/>\n            </FormGroup>\n           <Button className=\"contact-email-text-btn\" variant=\"outline-light\" size=\"lg\" type=\"submit\">\n              Submit\n              <ClipLoader\n                size={5} // or 150px\n                color={\"#ffffff\"}\n                loading={this.state.loading}\n              />\n            </Button>\n            \n            <Modal\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                show={this.state.show} onHide={this.handleClose}\n                centered\n              >\n              <Modal.Body className=\"contact_success_modal_body\">\n                <Image className=\"contact_success_modal_img\" src=\"https://icon-library.net/images/success-icon/success-icon-5.jpg\" />\n                <h5>Thank you <span><strong>{this.state.name}</strong>!!</span> 😇</h5>\n                <h6>Your message was successfully recorded</h6>\n                < br />\n                <Button variant=\"outline-light\" size=\"lg\" onClick={this.handleClose} className=\"contact-email-text-btn\">Close</Button>\n              </Modal.Body>\n           </Modal>\n          </Form>\n    )\n  }\n}\n\nexport default Email_Form"]},"metadata":{},"sourceType":"module"}