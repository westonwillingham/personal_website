{"ast":null,"code":"var _jsxFileName = \"/Users/westonwillingham/Desktop/Portfolio-2020/src/components/project_card_details/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport '../project_card_details/style.css';\nimport { Col, Row, Card, Button, Image } from 'react-bootstrap';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport GitLogo from '../../assets/img/git.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PCD = () => {\n  _s();\n\n  const [setErrors] = useState(false);\n  const [git, setGit] = useState([]);\n\n  async function fetchData() {\n    const res = await fetch(\"https://api.github.com/users/motasimfoad/repos\");\n    res.json().then(res => setGit(res)).catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  });\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: git.map(item => /*#__PURE__*/_jsxDEV(Col, {\n      xl: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"pro_card\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xl: 12,\n            className: \"project_img_container\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"project_card_left_img\",\n              src: GitLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: 12,\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"repoName\",\n              children: [\"Name: \", item.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"repoInfo\",\n              children: [\"Location: \", item.full_name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 44\n              }, this), \"Created: \", item.created_at, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 44\n              }, this), \"Updated: \", item.updated_at]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"project_card_main\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-light\",\n                size: \"lg\",\n                className: \"modal-exit-btn about_modal\",\n                children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                  text: item.ssh_url,\n                  onCopy: () => ToastsStore.info(\"SSH url copied to clipboard ü§©üòç\"),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"SSH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-light\",\n                size: \"lg\",\n                className: \"modal-exit-btn about_modal\",\n                children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                  text: item.clone_url,\n                  onCopy: () => ToastsStore.info(\"HTTPS url copied to clipboard üëçüò¨\"),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"HTTPS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-light\",\n                size: \"lg\",\n                className: \"modal-exit-btn about_modal\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: item.svn_url,\n                  style: {\n                    textDecoration: 'none',\n                    color: 'white'\n                  },\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: \"VIEW\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ToastsContainer, {\n                store: ToastsStore,\n                timer: \"10000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PCD, \"UaYUhI8MGS37vgEQV/wGOaogak0=\");\n\n_c = PCD;\nexport default PCD;\n\nvar _c;\n\n$RefreshReg$(_c, \"PCD\");","map":{"version":3,"sources":["/Users/westonwillingham/Desktop/Portfolio-2020/src/components/project_card_details/index.js"],"names":["React","useState","useEffect","Col","Row","Card","Button","Image","CopyToClipboard","ToastsContainer","ToastsStore","GitLogo","PCD","setErrors","git","setGit","fetchData","res","fetch","json","then","catch","err","map","item","name","full_name","created_at","updated_at","ssh_url","info","clone_url","svn_url","textDecoration","color","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '../project_card_details/style.css';\nimport {\n  Col,\n  Row,\n  Card,\n  Button,\n  Image\n} from 'react-bootstrap';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport GitLogo from '../../assets/img/git.svg';\n\nconst PCD = () => {\n  const [setErrors] = useState(false);\n  const [git, setGit] = useState([]);\n\n  async function fetchData() {\n    const res = await fetch(\"https://api.github.com/users/motasimfoad/repos\");\n    res\n      .json()\n      .then(res => setGit(res))\n      .catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  });\n  \n  return (\n    <Row >\n     {git.map(item => (\n       <Col xl={6} key = {item.id}>\n            <Card className=\"pro_card\">\n            <Row >\n              <Col xl={12} className=\"project_img_container\">\n              <Image className=\"project_card_left_img\" src={GitLogo}/>\n              </Col>\n            <Col xl={12}>\n              <Card.Title className=\"repoName\">\n               Name: {item.name} \n              </Card.Title>\n              <Card.Subtitle className=\"repoInfo\">\n                Location: {item.full_name} <br/>\n                Created: {item.created_at} <br/>\n                Updated: {item.updated_at} \n              </Card.Subtitle>\n            <Card.Body className=\"project_card_main\">\n              <Button variant=\"outline-light\" size=\"lg\" className=\"modal-exit-btn about_modal\">\n                    <CopyToClipboard text={item.ssh_url}\n                      onCopy={() => ToastsStore.info(\"SSH url copied to clipboard ü§©üòç\")}>\n                      <span>SSH</span>\n                    </CopyToClipboard>  \n                  </Button>\n                  <Button variant=\"outline-light\" size=\"lg\" className=\"modal-exit-btn about_modal\">\n                    <CopyToClipboard text={item.clone_url}\n                      onCopy={() => ToastsStore.info(\"HTTPS url copied to clipboard üëçüò¨\")}>\n                      <span>HTTPS</span>\n                    </CopyToClipboard>  \n                  </Button>\n                  <Button variant=\"outline-light\" size=\"lg\" className=\"modal-exit-btn about_modal\"> \n                  <a href={item.svn_url} style={{ textDecoration: 'none', color: 'white' }} target=\"_blank\" rel=\"noopener noreferrer\">VIEW</a>\n                  </Button>\n                  <ToastsContainer store={ToastsStore} timer = '10000' />\n            </Card.Body>\n            </Col>\n            </Row>\n            </Card>\n           </Col>\n          ))\n          }\n    </Row>\n  );\n};\nexport default PCD;\n"]},"metadata":{},"sourceType":"module"}